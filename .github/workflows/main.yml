name: CI & CD

on:
  push:
    branches:
      - 'main'
    tags:
      - '*.*.*'

jobs:
  test:
    name: ✅ Unit & integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache
        uses: coursier/cache-action@v6.1
      - name: JDK 11
        uses: actions/setup-java@v2.1.0
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Tests
        run: sbt coverage testAll coverageReport coverageAggregate
      - name: Codecov
        uses: codecov/codecov-action@v1.5.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
          directory: ./target/scala-2.13/coverage-report/
  lint:
    name: ⚠️ Fatal warnings and code formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache
        uses: coursier/cache-action@v6.1
      - name: JDK 11
        uses: actions/setup-java@v2.1.0
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Code formatting
        run: sbt scalafmtCheckAll
      - name: Fatal warnings
        run: sbt -Dmode=strict compile
  deploy-development:
    name: 🚀 Deploy development
    needs: [ test, lint ]
    if: ${{!startsWith(github.ref, 'refs/tags/')}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: hireproof-development
          service_account_key: ${{secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_DEVELOPMENT}}
          export_default_credentials: true
      - name: Cache
        uses: coursier/cache-action@v6.1
      - name: JDK 11
        uses: actions/setup-java@v2.1.0
        with:
          java-version: '11'
          distribution: 'adopt'
      - run: 'echo "$CONFIGURATION" > ./application.conf'
        shell: bash
        env:
          CONFIGURATION: ${{secrets.CONFIGURATION_DEVELOPMENT}}
      - name: Dockerfile
        run: sbt api/docker:stage
      - run: cp ./appengine/development.api.yml ./modules/api/target/docker/stage/app.yaml
      - name: Deploy
        run: |
          cd ./modules/api/target/docker/stage/ &&
          gcloud app deploy --version $(git rev-parse --short HEAD) --promote --stop-previous-version app.yaml
  deploy-staging:
    name: 🚀 Deploy staging
    needs: [ test, lint ]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: hireproof-staging
          service_account_key: ${{secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_STAGING}}
          export_default_credentials: true
      - name: Cache
        uses: coursier/cache-action@v6.1
      - name: JDK 11
        uses: actions/setup-java@v2.1.0
        with:
          java-version: '11'
          distribution: 'adopt'
      - run: 'echo "$CONFIGURATION" > ./application.conf'
        shell: bash
        env:
          CONFIGURATION: ${{secrets.CONFIGURATION_STAGING}}
      - name: Dockerfile
        run: sbt api/docker:stage
      - run: cp ./appengine/staging.api.yml ./modules/api/target/docker/stage/app.yaml
      - name: Deploy
        run: |
          cd ./modules/api/target/docker/stage/ &&
          gcloud app deploy --version $(git rev-parse --short HEAD) --promote --stop-previous-version app.yaml
  deploy-demo:
    name: 🚀 Deploy demo
    needs: [ test, lint ]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: hireproof-demo
          service_account_key: ${{secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_DEMO}}
          export_default_credentials: true
      - name: Cache
        uses: coursier/cache-action@v6.1
      - name: JDK 11
        uses: actions/setup-java@v2.1.0
        with:
          java-version: '11'
          distribution: 'adopt'
      - run: 'echo "$CONFIGURATION" > ./application.conf'
        shell: bash
        env:
          CONFIGURATION: ${{secrets.CONFIGURATION_DEMO}}
      - name: Dockerfile
        run: sbt api/docker:stage
      - run: cp ./appengine/demo.api.yml ./modules/api/target/docker/stage/app.yaml
      - name: Deploy
        run: |
          cd ./modules/api/target/docker/stage/ &&
          gcloud app deploy --version $(git rev-parse --short HEAD) --promote --stop-previous-version app.yaml
  deploy-production:
    name: 🚀 Deploy production
    needs: [ test, lint ]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: hireproof-production
          service_account_key: ${{secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_PRODUCTION}}
          export_default_credentials: true
      - name: Cache
        uses: coursier/cache-action@v6.1
      - name: JDK 11
        uses: actions/setup-java@v2.1.0
        with:
          java-version: '11'
          distribution: 'adopt'
      - run: 'echo "$CONFIGURATION" > ./application.conf'
        shell: bash
        env:
          CONFIGURATION: ${{secrets.CONFIGURATION_PRODUCTION}}
      - name: Dockerfile
        run: sbt api/docker:stage
      - run: cp ./appengine/production.api.yml ./modules/api/target/docker/stage/app.yaml
      - name: Deploy
        run: |
          cd ./modules/api/target/docker/stage/ &&
          gcloud app deploy --version $(git rev-parse --short HEAD) --promote --stop-previous-version app.yaml